// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name mediapipe_ios
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@_exported import mediapipe_ios
@objc public class CameraManager : ObjectiveC.NSObject {
  public init(_ inputView: UIKit.UIView)
  public func startSession()
  @objc deinit
}
extension mediapipe_ios.CameraManager : AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  @objc dynamic public func captureOutput(_ output: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from connection: AVFoundation.AVCaptureConnection)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class CameraView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public class var layerClass: Swift.AnyClass {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
